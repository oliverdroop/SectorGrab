package gameserver;import java.awt.event.ActionEvent;import java.awt.event.ActionListener;import java.io.IOException;import java.io.OutputStream;import java.net.ServerSocket;import java.net.Socket;import java.util.ArrayList;import java.util.List;import javax.swing.Timer;public class ServerConnector {    private List<Socket> Sockets = new ArrayList<Socket>();    private int BasePort = 8000;    private Timer ServerInputTimer = new Timer(100, new ActionListener() {        public void actionPerformed(ActionEvent e) {            int x = 0;        }    });    public ServerConnector() {        super();        try {            boolean acpt = false;            ServerSocket ss = new ServerSocket(this.BasePort);            while (acpt == false) {                Socket s0 = ss.accept();                System.out.println("Accepted connection from " + s0.getInetAddress().toString());                this.addSocket(s0);                PortMigrationRequest pmr = new PortMigrationRequest(this);                Send(s0, pmr.Serialize());                pmr.AwaitSecondary();                NewGameRequest ngr = new NewGameRequest(this);                this.Send(this.getSockets().get(0), ngr.Serialize());                System.out.println("Sent new game request");                acpt = true;                ServerInputTimer.start();            }        } catch (IOException ioe) {            ioe.printStackTrace();        } catch (Exception e) {            e.printStackTrace();        }    }    public void Send(Socket s, byte[] out) {        try {            OutputStream os = s.getOutputStream();            os.write(out);            os.flush();        } catch (IOException ioe) {            ioe.printStackTrace();        }    }    public List<Socket> getSockets() {        return this.Sockets;    }    public void addSocket(Socket s) {        this.Sockets.add(s);    }    public void removeSocket(Socket s) {        this.Sockets.remove(s);    }    public static void main(String[] args) {        new ServerConnector();    }}