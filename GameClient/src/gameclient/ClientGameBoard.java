package gameclient;import java.awt.Dimension;import java.awt.Toolkit;import java.awt.image.BufferedImage;import java.util.ArrayList;import java.util.List;public class ClientGameBoard {    private List<ClientNode> ClientNodes = new ArrayList<ClientNode>();    private BufferedImage Background;    private ClientConnector ClientConnector;    public ClientGameBoard(ClientConnector cc) {        super();        this.ClientConnector = cc;        InitializeBackground();        CreateNodes();        System.out.println("ClientGameBoard created");    }    public void CreateNodes() {        for (int x = 0; x < 16; x++) {            for (int y = 0; y < 16; y++) {                this.addClientNode(new ClientNode(this, x, y, 0));            }        }    }    public void InitializeBackground() {        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();        this.Background = new BufferedImage(screenSize.width, screenSize.height, 2);        int rgb = 0xFF000000;        for (int x = 0; x < this.getBackground().getWidth(); x++) {            for (int y = 0; y < this.getBackground().getHeight(); y++) {                if (x < this.getBackground().getWidth() && y < this.getBackground().getHeight())                    this.Background.setRGB(x, y, rgb);            }        }    }    public List<ClientNode> getClientNodes() {        return this.ClientNodes;    }    public void addClientNode(ClientNode n) {        this.ClientNodes.add(n);    }    public void removeClientNode(ClientNode n) {        this.ClientNodes.remove(n);    }    public ClientConnector getClientConnector() {        return this.ClientConnector;    }    public BufferedImage getBackground() {        return this.Background;    }}